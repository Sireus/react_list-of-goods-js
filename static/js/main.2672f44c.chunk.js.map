{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ABC","SORT_BY_LENGTH","App","useState","sortField","setSortField","reversed","setReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAc,MACdC,EAAiB,SA2BhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA5BR,SAA0BC,EAA1B,GAA2D,IAAxBL,EAAuB,EAAvBA,UAAWE,EAAY,EAAZA,SACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMR,GAAaS,EAAMT,GAElC,QACE,OAAO,MAKXE,GACFI,EAAcK,UAGTL,EAMcM,CACnBjB,EAAiB,CAAEK,YAAWE,aAQhC,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACWE,IAAGf,IAAcJ,GAAe,aAEpDoB,QAAS,kBAAMf,EAAaL,IAL9B,iCAUA,wBACEkB,KAAK,SACLD,UAAS,4BACcE,IAAGf,IAAcH,GAAkB,aAE1DmB,QAAS,kBAAMf,EAAaJ,IAL9B,4BAUA,wBACEiB,KAAK,SACLD,UAAS,4BACcE,KAAIb,GAAY,aAEvCc,QAAS,kBAAMb,GAAaD,IAL9B,sBAUEF,GAAaE,IACb,wBACEY,KAAK,SACLD,UAAU,4BACVG,QA1CI,WACZf,EAAa,IACbE,GAAY,IAqCN,sBAWJ,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCvGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2672f44c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ABC = 'abc';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, reversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ABC:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, reversed },\n  );\n\n  const reset = () => {\n    setSortField('');\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            `button is-info ${cn(sortField !== SORT_BY_ABC && 'is-light')}`\n          }\n          onClick={() => setSortField(SORT_BY_ABC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            `button is-success ${cn(sortField !== SORT_BY_LENGTH && 'is-light')}`\n          }\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            `button is-warning ${cn(!reversed && 'is-light')}`\n          }\n          onClick={() => setReversed(!reversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}